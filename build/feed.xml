<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mpdreamz.nl</title>
    <atom:link href="//feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>/</link>
    <description>-Love data, design and most of all, the web</description>
    <pubDate>Wed, 12 Dec 2012 19:54:00 +0100</pubDate>
    <generator>The mighty Wintersmith</generator>
    <language>en</language>
    <item>
      <title>Static blogging on Azure</title>
      <link>//articles/static-blogging-on-azure-2012-12-12/</link>
      <pubDate>Wed, 12 Dec 2012 19:54:00 +0100</pubDate>
      <guid isPermaLink="true">//articles/static-blogging-on-azure-2012-12-12/</guid>
      <author></author>
      <description>&lt;p&gt;I&apos;ve been playing with static blog sites way more then I ought to have especially considering this right here constitutes as my first blog post.

&lt;/p&gt;
&lt;p&gt;I find blogging scary enough, I make a lot of grammar mistakes even in my own native tongue and always mix up sayings at the amusal of my colleagues, friends and relatives. 
Mark Twain has been quoted as saying that he respected a person who could spell a word more than one way. Me thinks Mark Twain and I would have gotten along.

&lt;/p&gt;
&lt;p&gt;So to get me started on blogging I need to be able to write and push from the command line where I feel comfortable and safe with little time to get cold feet thinking about all the horrible grammar mistakes I&apos;ve made. 

&lt;/p&gt;
&lt;p&gt;So I&apos;ve settled on &lt;a href=&quot;http://jnordberg.github.com/wintersmith/&quot;&gt;wintersmith&lt;/a&gt; mostly because it&apos;s nodejs based and nodejs is really easy to set up on any machine whether its windows, linux or mac. &lt;a href=&quot;http://jnordberg.github.com/wintersmith/&quot;&gt;wintersmith&lt;/a&gt; stood out to me because it has just enough to please without feeling crippled. 

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ wintersmith preview&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ wintersmith build&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;bring home the cake.

&lt;/p&gt;
&lt;p&gt;I added a small &lt;code&gt;Makefile&lt;/code&gt; to ease with adding new articles as I really want to have a date in my slug


&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME = &lt;span class=&quot;string&quot;&gt;&quot;new-article&quot;&lt;/span&gt;
FULLDATE=`date +&lt;span class=&quot;string&quot;&gt;'%y-%m-%d %H:%M'&lt;/span&gt;`
DATE=`date +&lt;span class=&quot;string&quot;&gt;'%Y-%m-%d'&lt;/span&gt;`
FOLDER = &lt;span class=&quot;string&quot;&gt;&quot;./contents/articles/`echo $(NAME) | tr A-Z a-z | tr &quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot; -`-$(DATE)&quot;&lt;/span&gt;
MSG = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;

all:
    wintersmith build 
    git add .
    git commit -am &lt;span class=&quot;string&quot;&gt;&quot;releasing $(MSG)&quot;&lt;/span&gt;
    git push origin master

&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;:
    mkdir &lt;span class=&quot;string&quot;&gt;&quot;$(FOLDER)&quot;&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;title: $(NAME)\nauthor: Mpdreamz\ndate: 20$(FULLDATE)\ntemplate: article.jade\n\n&quot;&lt;/span&gt; &gt;&gt; &lt;span class=&quot;string&quot;&gt;&quot;$(FOLDER)/index.md&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now 

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NAME=&lt;span class=&quot;string&quot;&gt;&quot;My New Article&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and 

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make MSG=&quot;Commit message&quot; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;brings home the cake. &lt;code&gt;make new&lt;/code&gt; takes care of figuring out what day it is and slugifying my desired blog title.
&lt;code&gt;MAKE MSG=&quot;&quot;&lt;/code&gt; will commit my changes and push it to github. Github then notifies Azure to deploy my latest changes. This all happens within a few seconds!


&lt;/p&gt;
&lt;p&gt;For hosting I ended up with Azure git based hosting because it has a little gem I could not get on Heroku
the &lt;code&gt;.deployment&lt;/code&gt; file where I can point to an alternative root. 

&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ini&quot;&gt;[config]
project=build&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This little feature is a huge advantage to the other platforms I looked at, Heroku needs a small server to serve from a subfolder and github pages need a separate branch.

&lt;/p&gt;
&lt;p&gt;For now I&apos;m pleased with this setup

&lt;/p&gt;
&lt;p&gt;Sidenote: I just ran a &lt;code&gt;:set spell&lt;/code&gt; and I&apos;m certain I&apos;m a respectable person by Mark Twain standards. 
&lt;/p&gt;
</description>
    </item>
    <item>
      <title>raygun.io first thoughts</title>
      <link>//articles/raygun.io-first-thoughts-2013-03-07/</link>
      <pubDate>Thu, 07 Mar 2013 08:35:00 +0100</pubDate>
      <guid isPermaLink="true">//articles/raygun.io-first-thoughts-2013-03-07/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://raygun.io&quot;&gt;raygun.io&lt;/a&gt; is a new application error monitoring service for many languages and platforms from the kiwi&apos;s over at &lt;a href=&quot;http://www.mindscapehq.com/&quot;&gt;Mindscape&lt;/a&gt;.  

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/homeFeature.png&quot; alt=&quot;overview of raygun.io&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Since this will mostly be a rant about the things I &lt;code&gt;don&apos;t&lt;/code&gt; like I&apos;d like to state first and foremost that I&apos;m &lt;code&gt;using and paying&lt;/code&gt; for this service and am &lt;code&gt;very content&lt;/code&gt; overall!.

&lt;/p&gt;
&lt;p&gt;Ok let&apos;s start 

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/menu.png&quot; alt=&quot;menu hides information&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;The menu introduces a toggle between current app options and listing all the applications. I&apos;d much much rather see an accordion like design here:

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/menu-new.png&quot; alt=&quot;new menu&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;This lets me group different applications, staging environments in this case, together and get an immediate glimpse of the state of all my applications/application groups. The ugly red balls in my mockup  are suppose to be error counts. I  can then use the abundance of space on the right to toggle application views. Which also brings me to my next point: the dashboard view.

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/dashboard.png&quot; alt=&quot;dashboard&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;As you can see in the above image this is the only overview page you have for all the errors in your application. All the noise is great for a dashboard view but I really need a hardcore straight up list of data. Remember the image above is scaled down pretty much already.The fancy graph nearly pushes the errors off screen on my 22&quot; full hd monitors.

&lt;/p&gt;
&lt;p&gt;I&apos;d much rather see a data first view as the default, sort of like this:

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/dataviewmock.png&quot; alt=&quot;mockup&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Wow me here good folk over at Mindscape, let me choose the facets I want, let me select all the errors older then 2 days (even if there are over 9000 of them) and resolve them in 2 clicks. 

&lt;/p&gt;
&lt;p&gt;The last big area &lt;a href=&quot;http://raygun.io&quot;&gt;raygun.io&lt;/a&gt; needs to improve is mobile support. Today on the train ride back home I received emails from &lt;a href=&quot;http://raygun.io&quot;&gt;raygun.io&lt;/a&gt; of exceptions occurring on the testing environment. Followed pretty quickly by the client emailing he spotted a bug. &quot;Great!&quot;,I thought, &quot;let me look at the exceptions on my iPhone!&quot; so I can respond to the client with an informed answer. 

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/mobile1.jpg&quot; alt=&quot;This doesn&apos;t look responsive&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Oomph, this doesn&apos;t look responsive at all. I can&apos;t get to the top right login button I know is there.

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/mobile2.jpg&quot; alt=&quot;Sign in at the bottom&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Ohh I&apos;m in luck, there&apos;s a sign in link in the footer.

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/mobile3.jpg&quot; alt=&quot;hello white blob&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Hello whitespace!, luckily I know the login box is to the right

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;/articles/raygun.io-first-thoughts-2013-03-07/mobile4.jpg&quot; alt=&quot;login at last&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;From here I enter my details and hit submit... nothing... no loading icon .... I give up.

&lt;/p&gt;
&lt;p&gt;As I don&apos;t like closing on a negative note let me repeat that I&apos;ve long been a fan of the guys and girls over at Mindscape. I&apos;m glad they got &lt;a href=&quot;http://raygun.io&quot;&gt;raygun.io&lt;/a&gt; out the door early to let early adopters like myself moan and groan, that&apos;s a good thing and a sign of a healthy project. Considering this service went from inception to being up and running in a couple of months and is already in the state it is now speaks parts on how things will shape up in the future.



&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Writing a simple wintersmith plugin</title>
      <link>//articles/writing-a-simple-wintersmith-plugin-2013-02-03/</link>
      <pubDate>Sun, 03 Feb 2013 19:57:00 +0100</pubDate>
      <guid isPermaLink="true">//articles/writing-a-simple-wintersmith-plugin-2013-02-03/</guid>
      <author></author>
      <description>&lt;p&gt;I wanted to hook in to how &lt;code&gt;&lt;img&gt;&lt;/code&gt; are outputted by giving them a wrapper element. 
The reason I want to do this is so that i can give the wrapper a full page width background while centering and constraining the img&apos;s &lt;code&gt;max-width&lt;/code&gt; to different sizes on different screen sizes. 

&lt;/p&gt;
&lt;p&gt;Enter &lt;code&gt;wintersmith-markdownhacks&lt;/code&gt;:

&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;coffee&quot;&gt;fs = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'fs'&lt;/span&gt;
path = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'path'&lt;/span&gt;
url = &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'url'&lt;/span&gt;

module.exports = (wintersmith, callback) -&gt;

&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; LocalGhostPage &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; wintersmith.defaultPlugins.MarkdownPage

    getHtml: (base) -&gt;
        super base
        @_html = @_html.replace(/(&lt;img[^&gt;]+&gt;)/g, &lt;span class=&quot;string&quot;&gt;'&lt;div class=&quot;image-wrapper&quot;&gt;$1&lt;/div&gt;'&lt;/span&gt;)
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @_html


    wintersmith.registerContentPlugin &lt;span class=&quot;string&quot;&gt;'pages'&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;'**/*.*(markdown|mkd|md)'&lt;/span&gt;, LocalGhostPage

    callback()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Registered in wintersmith&apos;s &lt;code&gt;config.json&lt;/code&gt;:

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&quot;plugins&quot;: [
    &quot;wintersmith-sass&quot;,
    &quot;./node_modules/wintersmith-markdownhacks/plugin.coffee&quot;
]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&apos;s dirty but I love it&#153;. Here&apos;s an obligatory cat gif showing the end result.

&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;image-wrapper&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/-LRMOoQYIynY/UNH4iMul_gI/AAAAAAAAGoY/eJHrtOsd2QI/s275/137.gif&quot; alt=&quot;obligatory cat gif&quot;&gt;&lt;/div&gt;

&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>