// Generated by CoffeeScript 1.3.3
var JadeTemplate, TemplatePlugin, async, fs, jade, path,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

async = require('async');

jade = require('jade');

fs = require('fs');

path = require('path');

TemplatePlugin = require('./../templates').TemplatePlugin;

JadeTemplate = (function(_super) {

  __extends(JadeTemplate, _super);

  function JadeTemplate(fn) {
    this.fn = fn;
  }

  JadeTemplate.prototype.render = function(locals, callback) {
    try {
      return callback(null, new Buffer(this.fn(locals)));
    } catch (error) {
      return callback(error);
    }
  };

  return JadeTemplate;

})(TemplatePlugin);

JadeTemplate.fromFile = function(filename, base, callback) {
  var fullpath,
    _this = this;
  fullpath = path.join(base, filename);
  return async.waterfall([
    function(callback) {
      return fs.readFile(fullpath, callback);
    }, function(buffer, callback) {
      var rv;
      try {
        rv = jade.compile(buffer.toString(), {
          filename: fullpath,
          pretty: true
        });
        return callback(null, new _this(rv));
      } catch (error) {
        return callback(error);
      }
    }
  ], callback);
};

module.exports = JadeTemplate;
