// Generated by CoffeeScript 1.3.3
var JsonPage, Page, async, path, readJSON,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

path = require('path');

async = require('async');

Page = require('./page');

readJSON = require('./../common').readJSON;

JsonPage = (function(_super) {

  __extends(JsonPage, _super);

  function JsonPage() {
    return JsonPage.__super__.constructor.apply(this, arguments);
  }

  return JsonPage;

})(Page);

JsonPage.fromFile = function(filename, base, callback) {
  var _this = this;
  return async.waterfall([
    async.apply(readJSON, path.join(base, filename)), function(metadata, callback) {
      var page;
      page = new _this(filename, metadata.content || '', metadata);
      return callback(null, page);
    }
  ], callback);
};

module.exports = JsonPage;
